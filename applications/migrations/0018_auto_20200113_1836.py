# Generated by Django 2.2.1 on 2020-01-13 15:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0012_auto_20200111_1516'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('applications', '0017_auto_20200111_1516'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalApplicant',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('financial_year', models.CharField(default='2020/2021', max_length=200)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=200)),
                ('family_status', models.CharField(choices=[('orphan', 'Total Orphan'), ('single_parent', 'Single Parent (Without Source of Income)'), ('partial_orphan', 'Partial Orphan (Mother/Father Alive) Without Source of Income'), ('both_parents', 'Both Parents Alive Without Source of Income')], max_length=200)),
                ('death_cert_father', models.TextField(blank=True, max_length=100, null=True)),
                ('death_cert_mother', models.TextField(blank=True, max_length=100, null=True)),
                ('name_of_gurdian', models.CharField(max_length=150)),
                ('contact_of_gurdian', models.CharField(max_length=150)),
                ('disability_status', models.BooleanField(default=False)),
                ('disability_desc', models.TextField(blank=True, null=True)),
                ('school_name', models.CharField(max_length=250)),
                ('school_email', models.EmailField(max_length=254)),
                ('adm_number', models.CharField(max_length=100)),
                ('class_of_study', models.IntegerField()),
                ('award_status', models.CharField(choices=[('not_set', 'Not Set'), ('awarded', 'Awarded'), ('not_awarded', 'Not Awarded')], default='not_set', max_length=200)),
                ('discipline', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('very_good', 'Very Good'), ('good', 'Good'), ('poor', 'Poor'), ('very_poor', 'Very Poor')], max_length=250, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cheque_number', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.Cheque')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('school_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='applications.SchoolType')),
                ('subcounty', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='applications.Subcounty')),
                ('sublocation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='applications.Sublocation')),
                ('ward', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='applications.Ward')),
            ],
            options={
                'verbose_name': 'historical applicant',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
